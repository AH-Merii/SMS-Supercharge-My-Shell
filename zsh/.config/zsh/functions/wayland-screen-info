#!/usr/bin/env bash
# get-res.sh â€” Get Wayland screen resolution (main display)
# Usage: get-res.sh [width|height]
#        get-res.sh -h|--help

set -euo pipefail

SCRIPT_NAME="$(basename "$0")"

print_help() {
  cat <<EOF
Usage: ${SCRIPT_NAME} [OPTION]

Get the current screen resolution of the main display via wayland-info.

Options:
  width        Print only the screen width.
  height       Print only the screen height.
  -h, --help   Show this help message and exit.
  (no args)    Print "<width> <height>".

Examples:
  ${SCRIPT_NAME}          # e.g. "1920 1080"
  ${SCRIPT_NAME} width    # e.g. "1920"
  ${SCRIPT_NAME} height   # e.g. "1080"
EOF
}

# Ensure we're on Wayland
if [[ "${XDG_SESSION_TYPE:-}" != "wayland" ]]; then
  echo "Error: This script must be run in a Wayland session." >&2
  exit 1
fi

# Ensure wayland-info is available
if ! command -v wayland-info &>/dev/null; then
  read -rp "wayland-utils is not installed. Install via pacman now? [Y/n] " reply
  reply="${reply:-Y}"
  if [[ "$reply" =~ ^[Yy]$ ]]; then
    sudo pacman -S --noconfirm wayland-utils
  else
    echo "Error: wayland-info is required. Exiting." >&2
    exit 1
  fi
fi

# Parse arguments
case "${1-}" in
  width)     mode=width ;;
  height)    mode=height ;;
  -h|--help) print_help; exit 0 ;;
  "")        mode=both ;;
  *)         echo "Error: Unknown option '$1'." >&2
             print_help
             exit 1 ;;
esac

# Returns the current screen width (px) for the main display
get_width() {
  wayland-info | awk '
    /width:/           { w = $2 }
    /flags:.*current/  { print w; exit }
  '
}

# Returns the current screen height (px) for the main display
get_height() {
  wayland-info | awk '
    /height:/          { h = $5 }
    /flags:.*current/  { print h; exit }
  '
}

# Output according to mode
case "$mode" in
  both)   echo "$(get_width) $(get_height)" ;;
  width)  echo "$(get_width)" ;;
  height) echo "$(get_height)" ;;
esac

